<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <apikit:config name="api-product-config" raml="api-product.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="api-product-main">
        <http:listener config-ref="HTTP_Listener_config" path="/api/*" doc:name="Listener">
            <http:response statusCode="#[vars.httpStatus default 200]">
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="api-product-config" doc:name="APIkit Router"/>
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED" doc:name="On Error Propagate">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="ANY" doc:name="On Error Propagate" enableNotifications="true" logException="true">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Internal Server Error"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[500]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="api-product-console">
        <http:listener config-ref="HTTP_Listener_config" path="/console/*" doc:name="Listener">
            <http:response statusCode="#[vars.httpStatus default 200]">
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="api-product-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\product\(id):application\json:api-product-config">
        <logger level="INFO" message="put:\product\(id):application\json:api-product-config" />
    </flow>
    <flow name="delete:\product\(id):application\json:api-product-config">
        <ee:transform doc:name="Get Uri Params" doc:id="18bf2497-2270-48b0-b449-bc576abc3aac" >
			<ee:message />
			<ee:variables >
				<ee:set-variable variableName="id" ><![CDATA[%dw 2.0
output application/java
---
attributes.uriParams.id]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<try doc:name="Try" doc:id="c1745052-3ee4-4ac8-aec6-7ce074af9954" transactionalAction="ALWAYS_BEGIN">
			<db:delete config-ref="MySQL_Configuration" doc:name="Delete Product" doc:id="07333e4b-ffd7-4f38-8535-c9b66a0436fb" >
				<db:sql >delete from product where id=:id</db:sql>
				<db:input-parameters ><![CDATA[#[{'id' : vars.id}]]]></db:input-parameters>
			</db:delete>
		</try>
		<ee:transform doc:name="Set Status" doc:id="9976485b-94e5-42d6-9a89-c8acd9bf310c" >
			<ee:message />
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
204]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
    </flow>
    <flow name="get:\product\(id):api-product-config">
		<ee:transform doc:name="Get Uri Params" doc:id="89d0a01b-dae9-4eaa-8167-32a37001c08d" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="id" ><![CDATA[%dw 2.0
output application/java
---
attributes.uriParams.id]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:select config-ref="MySQL_Configuration" doc:name="Get by Id" doc:id="0eed6454-d19c-4be9-94a5-a5c19414a575">
			<db:sql>SELECT p.id, p.name, p.description, p.product_number, p.manufactured, p.colors, p.categories, p.stock, p.safety_stock_level, p.standard_cost, p.list_price, p.size, p.size_unit_measure_code, p.weight, p.weight_unit_measure_code, p.days_to_manufacture, p.images,  p.modified_date, p.created_date 
FROM product p 
where p.id = :id</db:sql>
			<db:input-parameters><![CDATA[#[{'id' : vars.id}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="transform to ArrayList" doc:id="defcf225-408d-49ad-b861-7ac8e2bfc6bf">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload as Array]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="If result exists" doc:id="8df417bb-e872-4f71-b1f6-b587b0240ce8" >
			<when expression="#[sizeOf(payload) &gt; 0]" >
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:name="Products to JSON">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
var product = payload[0]
---
{
	id: product.id,
	name: product.name,
	description: product.description,
	manufactured: product.manufactured,
	productNumber: product.product_number,
	colors: (product.colors default "") splitBy "," ,
	categories:(product.categories default "") splitBy "," ,
	safetyStockLevel: product.safety_socket_level,
	standardCost: (product.standard_cost default "0.0") as String {format: "##.##"} as Number,
	listPrice: (product.list_price default "0.0") as String {format: "##.##"} as Number,
	stock: product.stock,
	safetyStockLevel: product.safety_stock_level,
	daysToManufacture: product.days_to_manufacture,
	size: product.size,
	sizeUnitMeasureCode: product.size_unit_measure_code,
	weight: product.weight,
	weightUnitMeasureCode: product.weight_unit_measure_code,
	daysToManufacture: product.days_to_manufacture,	
	images: (product.images splitBy "," default null),
	modifiedDate: (product.modified_date default "") as Date {format: "yyyy-MM-dd"},
	createdDate: (product.created_date default "") as Date {format: "yyyy-MM-dd"}
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="Set Resource not Found" doc:id="6924eb05-a6e0-4966-b048-b846cd08d604">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Resource not found"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
    </flow>
    <flow name="get:\product:api-product-config">
        <ee:transform doc:name="Get Query Params" doc:id="b99dcbea-c676-4f9f-a60a-29eaa092d051">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="queryOffset"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.offset as Number]]></ee:set-variable>
				<ee:set-variable variableName="queryLimit"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.maxResults as Number]]></ee:set-variable>
				<ee:set-variable variableName="queryName"><![CDATA[%dw 2.0
output application/java
var queryName = attributes.queryParams.name
---
if (queryName != null)
	queryName
else
	'%%']]></ee:set-variable>
				<ee:set-variable variableName="queryCategory"><![CDATA[%dw 2.0
output application/java
var queryCategory = attributes.queryParams.category
---
if (queryCategory != null)
	queryCategory
else
	'%%']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:select config-ref="MySQL_Configuration" doc:name="Query Products" doc:id="3b1d352b-a476-4885-9401-e925afba00b6" >
			<db:sql >SELECT  p.id, p.name, p.description, p.product_number, p.manufactured, p.colors, p.categories, p.stock, p.safety_stock_level, p.standard_cost, p.list_price, p.size, p.size_unit_measure_code, p.weight, p.weight_unit_measure_code, p.days_to_manufacture, p.images,  p.modified_date, p.created_date 
FROM product p
WHERE LOWER(p.name) like :name AND LOWER(p.categories) like :category
LIMIT :limit
OFFSET :offset</db:sql>
			<db:input-parameters ><![CDATA[#[{'name' : lower(vars.queryName), 'category': lower(vars.queryCategory), 'limit': vars.queryLimit, 'offset': vars.queryOffset}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Database to JSON" doc:id="3dc42c51-dade-4857-9090-00f5a7626c21" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map {
	id: $.id,
	categories: ($.categories default "") splitBy ",",
	colors: ($.colors default "") splitBy ",",
	images: ($.images default "") splitBy ",",
	createdDate: $.created_date as String {format: "yyyy-MM-dd"},
	modifiedDate: $.modified_date as String {format: "yyyy-MM-dd"},
	safetyStockLevel: $.safety_stock_level as Number,
	stock: $.stock as Number,
	daysToManufacture: $.days_to_manufacture,
	name: $.name,
	description: $.description,
	listPrice: $.list_price,
	manufactured: $.manufactured,
	productNumber: $.product_number,
	size: $.size,
	sizeUnitMeasureCode: $.size_unit_measure_code,
	standardCost: $.standard_cost,
	weightUnitMeasureCode: $.weight_unit_measure_code,
	weight: $.weight
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
    <flow name="post:\product:application\json:api-product-config">
		<ee:transform doc:name="Json to Map" doc:id="36171883-b5bd-4138-8705-d86f24ff35e1" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="originalPayload" ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="newPayload" ><![CDATA[%dw 2.0
output application/java
fun getManufacturedCode(value) =
	if (value == true) 1
	else 0
---
{
	categories: payload.categories joinBy ",",
	colors: payload.colors joinBy ",",
	daysToManufacture: payload.daysToManufacture,
	description: payload.description,
	images: payload.images joinBy ",",
	listPrice: payload.listPrice,
	manufactured: getManufacturedCode(payload.manufactured),
	name: payload.name,
	productNumber: payload.productNumber,
	safetyStockLevel: payload.safetyStockLevel,
	size: payload.size,
	sizeUnitMeasureCode: payload.sizeUnitMeasureCode,
	standardCost: payload.standardCost,
	stock: payload.stock, 
	weight: payload.weight,
	weightUnitMeasureCode: payload.weightUnitMeasureCode
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<try transactionalAction="ALWAYS_BEGIN" doc:name="Try">
		<db:insert config-ref="MySQL_Configuration" doc:name="Insert Product" doc:id="5c78b2e3-5c4b-4764-aa61-08410c4e9071" autoGenerateKeys="true">
			<db:sql >insert into product(name, description, product_number, manufactured, colors, categories, stock, safety_stock_level, standard_cost, list_price, size, size_unit_measure_code, weight, weight_unit_measure_code, days_to_manufacture, images, modified_date, created_date) 
values(:name, :description, :product_number, :manufactured, :colors,  :categories, :stock, :safety_stock_level, :standard_cost, :list_price, :size, :size_unit_measure_code, :weight, :weight_unit_measure_code, :days_to_manufacture, :images, CURDATE(), CURDATE());</db:sql>
			<db:input-parameters ><![CDATA[#[{'name': vars.newPayload.name, 'description': vars.newPayload.description, 'product_number': vars.newPayload.productNumber, 'manufactured': vars.newPayload.manufactured, 'colors': vars.newPayload.colors, 'categories': vars.newPayload.categories, 'stock': vars.newPayload.stock, 'safety_stock_level': vars.newPayload.safetyStockLevel, 'standard_cost': vars.newPayload.standardCost, 'list_price': vars.newPayload.listPrice, 'size': vars.newPayload.size, 'size_unit_measure_code': vars.newPayload.sizeUnitMeasureCode, 'weight': vars.newPayload.weight, 'weight_unit_measure_code': vars.newPayload.weightUnitMeasureCode, 'days_to_manufacture': vars.newPayload.daysToManufacture, 'images': vars.newPayload.images}]]]></db:input-parameters>
				<db:auto-generated-keys-column-names >
					<db:auto-generated-keys-column-name value="id" />
				</db:auto-generated-keys-column-names>
		</db:insert>
		</try>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:name="Database to Json">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.originalPayload ++
id: payload.generatedKeys.GENERATED_KEY]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
